package com.gft.milhas.controller;

import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.gft.milhas.entities.Evento;
import com.gft.milhas.helpers.DateHelper;
import com.gft.milhas.models.EventoEdicaoModel;
import com.gft.milhas.repositories.EventoRepository;

@Controller
public class EventoEdicaoController {

	@RequestMapping(value = "/eventos-edicao")
	public ModelAndView edicao(Integer id, HttpServletRequest request) {
		
		ModelAndView modelAndView = new ModelAndView("eventos-edicao");
		
		try{
		
			
			EventoRepository eventoRepository = new EventoRepository();
			Evento evento = eventoRepository.findById(id);
			
			if(evento != null) {
				
				EventoEdicaoModel model = new EventoEdicaoModel();
				
				model.setIdEvento(evento.getIdEvento());
				model.setNome(evento.getNome());
				model.setDataInicio(DateHelper.formatToString(evento.getDataInicio()));
				model.setDataFinal(DateHelper.formatToString(evento.getDataFinal()));
				
				modelAndView.addObject("model", model);
				
			}
			else {
				//redirecionar de volta para a página de connsulta
				modelAndView.setViewName("redirect:tarefas-consulta");
			}
		}
		catch(Exception e) {
			//gerando uma mensagem de erro
			modelAndView.addObject("mensagem", "Ocorreu um erro: " + e.getMessage());
		}
		
		return modelAndView;
	}
	
	@RequestMapping(value = "/editar-tarefa", method = RequestMethod.POST)
	public ModelAndView editarTarefa(TarefaEdicaoModel model, HttpServletRequest request) {
		
		ModelAndView modelAndView = new ModelAndView("tarefas-edicao");
		
		try {
			
			//capturar o usuário da sessão
			Usuario usuario = (Usuario) request.getSession().getAttribute("usuario_auth");
			
			//capturar todos os dados da tarefa
			Tarefa tarefa = new Tarefa();
			
			tarefa.setIdTarefa(model.getIdTarefa());
			tarefa.setNome(model.getNome());
			tarefa.setData(DateHelper.formatToDate(model.getData()));
			tarefa.setHora(model.getHora());
			
			tarefa.setPrioridade(model.getPrioridade().equals("ALTA") ? 1 
					: model.getPrioridade().equals("MEDIA") ? 2 
					: model.getPrioridade().equals("BAIXA") ? 3
					: 0);
			
			tarefa.setDescricao(model.getDescricao());
			tarefa.setUsuario(usuario);
			
			//atualizando no banco de dados
			TarefaRepository tarefaRepository = new TarefaRepository();
			tarefaRepository.update(tarefa);
			
			modelAndView.addObject("mensagem", "Tarefa atualizada com sucesso!");
		}
		catch(Exception e) {
			//mensagem de erro
			modelAndView.addObject("mensagem", "Ocorreu um erro: " + e.getMessage());
		}
		
		modelAndView.addObject("model", model);
		modelAndView.addObject("prioridades", PrioridadeTarefa.values());
		return modelAndView;
	}	
}