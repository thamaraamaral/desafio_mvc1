package com.gft.milhas.controller;

import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import com.gft.milhas.models.EventoConsultaModel;
import com.gft.milhas.models.GrupoConsultaModel;
import com.gft.milhas.repositories.GrupoRepository;

@Controller
public class GrupoConsultaController {

	@RequestMapping(value = "/grupos-consulta")
	public ModelAndView consulta() {

		ModelAndView modelAndView = new ModelAndView("grupos-consulta");

		modelAndView.addObject("model", new EventoConsultaModel());
		return modelAndView;
	}

	@RequestMapping(value = "/consultar-grupos", method = RequestMethod.GET)
	public ModelAndView consultarGrupos(GrupoConsultaModel model, HttpServletRequest request) {

		ModelAndView modelAndView = new ModelAndView("grupos-consulta");

		try {

			// capturar o usuário autenticado (sessão)
			//Usuario usuario = (Usuario) request.getSession().getAttribute("usuario_auth");

			String nomeEvento = model.getNome();
		
		
			GrupoRepository grupoRepository = new GrupoRepository();
			List<Grupo> lista = grupoRepository.findAll();

			// enviando a lista de tarefas para a página:
			modelAndView.addObject("tarefas", lista);

			// gerando uma mensagem
			if (lista.size() > 0) {
				modelAndView.addObject("mensagem",
						lista.size() + " tarefa(s) encontrada(s) para o período especificado.");
			} else {
				modelAndView.addObject("mensagem", "Nenhuma tarefa foi encontrada para o período especificado.");
			}
		} catch (Exception e) {
			// gerando uma mensagem de erro
			modelAndView.addObject("mensagem", "Ocorreu um erro: " + e.getMessage());
		}

		modelAndView.addObject("model", model);
		return modelAndView;
	}

	@RequestMapping(value = "/tarefas-exclusao")
	public ModelAndView excluirTarefa(Integer id, HttpServletRequest request) {

		ModelAndView modelAndView = new ModelAndView("tarefas-consulta");

		try {

			// capturar o usuário autenticado (sessão)
			Usuario usuario = (Usuario) request.getSession().getAttribute("usuario_auth");

			Tarefa tarefa = new Tarefa();
			tarefa.setIdTarefa(id);
			tarefa.setUsuario(usuario);

			// excluindo a tarefa
			TarefaRepository tarefaRepository = new TarefaRepository();
			tarefaRepository.delete(tarefa);

			modelAndView.addObject("mensagem", "Tarefa excluída com sucesso.");
		} catch (Exception e) {
			// gerando uma mensagem de erro
			modelAndView.addObject("mensagem", "Ocorreu um erro: " + e.getMessage());
		}

		modelAndView.addObject("model", new TarefaConsultaModel());
		return modelAndView;
	}

}
