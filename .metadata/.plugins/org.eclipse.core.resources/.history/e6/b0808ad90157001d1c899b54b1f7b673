package com.gft.milhas.controller;

import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.gft.milhas.entities.Evento;
import com.gft.milhas.helpers.DateHelper;
import com.gft.milhas.models.EventoEdicaoModel;
import com.gft.milhas.repositories.EventoRepository;

@Controller
public class EventoEdicaoController {

	@RequestMapping(value = "/eventos-edicao")
	public ModelAndView edicao(String nome, HttpServletRequest request) {
		
		ModelAndView modelAndView = new ModelAndView("tarefas-edicao");
		
		try{
			
			//consultar a tarefa no banco de dados através do id
			EventoRepository eventoRepository = new EventoRepository();
			Evento evento = eventoRepository.findByNome(nome);
			
			//verificando se algum registro foi encontrado
			if(evento != null) {
				
				EventoEdicaoModel model = new EventoEdicaoModel();
				
				
				model.setNome(evento.getNome());
				model.setData(DateHelper.formatToString(evento.getDataInicio()));
				model.setHora(tarefa.getHora());
				model.setDescricao(tarefa.getDescricao());
				model.setPrioridade(tarefa.getPrioridade() == 1 ? "ALTA"
						: tarefa.getPrioridade() == 2 ? "MEDIA"
						: tarefa.getPrioridade() == 3 ? "BAIXA"
						: null);				
				
				modelAndView.addObject("model", model);

			}
			else {
				//redirecionar de volta para a página de connsulta
				modelAndView.setViewName("redirect:tarefas-consulta");
			}
		}
		catch(Exception e) {
			//gerando uma mensagem de erro
			modelAndView.addObject("mensagem", "Ocorreu um erro: " + e.getMessage());
		}
		
		return modelAndView;
	}
	
	@RequestMapping(value = "/editar-evento", method = RequestMethod.POST)
	public ModelAndView editarEvento(EventoEdicaoModel model, HttpServletRequest request) {
		
		ModelAndView modelAndView = new ModelAndView("tarefas-edicao");
		
		try {
		
			//capturar todos os dados da tarefa
			Evento evento = new Evento();
			
			
			evento.setNome(model.getNome());
			evento.setDataInicio(DateHelper.formatToDate(model.getDataInicio()));
			evento.setDataFinal(DateHelper.formatToDate(model.getDataFinal()));
			
	

			//atualizando no banco de dados
			EventoRepository eventoRepository = new EventoRepository();
			eventoRepository.update(evento);
			
			modelAndView.addObject("mensagem", "Evento atualizado com sucesso!");
		}
		catch(Exception e) {
			
			modelAndView.addObject("mensagem", "Ocorreu um erro: " + e.getMessage());
		}
		
		modelAndView.addObject("model", model);

		return modelAndView;
	}	
}
